{"ast":null,"code":"var _jsxFileName = \"/Users/sk62793/application-1/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport './index.css';\nimport reader from './reducers';\nimport EventsIndex from './components/events_index';\nimport EventsNew from './components/events_new';\nimport * as serviceWorker from './serviceWorker';\nconst enhancer = process.env.NODE_ENV === 'development' ? composeWithDevTools(applyMiddleware(thunk)) : applyMiddleware(thunk);\nconst store = createStore(reader, enhancer);\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/events/new\",\n  component: EventsNew,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/events/id\",\n  component: EventsShow,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: EventsIndex,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/events\",\n  component: EventsIndex,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n})))), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/sk62793/application-1/src/index.js"],"names":["React","ReactDOM","createStore","applyMiddleware","Provider","thunk","BrowserRouter","Route","Switch","composeWithDevTools","reader","EventsIndex","EventsNew","serviceWorker","enhancer","process","env","NODE_ENV","store","render","EventsShow","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAGA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACjBR,mBAAmB,CAACN,eAAe,CAACE,KAAD,CAAhB,CADF,GAC6BF,eAAe,CAACE,KAAD,CAD7D;AAEA,MAAMa,KAAK,GAAGhB,WAAW,CAACQ,MAAD,EAASI,QAAT,CAAzB;AAEAb,QAAQ,CAACkB,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,aAAZ;AAA0B,EAAA,SAAS,EAAEN,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,YAAZ;AAAyB,EAAA,SAAS,EAAEQ,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAET,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,EAII,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,SAAlB;AAA4B,EAAA,SAAS,EAAEA,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,CADJ,CADJ,CADJ,EAWIU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAXJ;AAaAT,aAAa,CAACU,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css';\nimport reader from './reducers'\nimport EventsIndex from './components/events_index';\nimport EventsNew from './components/events_new';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst enhancer = process.env.NODE_ENV === 'development' ?\ncomposeWithDevTools(applyMiddleware(thunk)) : applyMiddleware(thunk)\nconst store = createStore(reader, enhancer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/events/new\" component={EventsNew} />\n                <Route path=\"/events/id\" component={EventsShow} />\n                <Route exact path=\"/\" component={EventsIndex} />\n                <Route exact path=\"/events\" component={EventsIndex} />\n            </Switch>\n        </BrowserRouter>\n    </Provider>, \n    document.getElementById('root')\n);\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}
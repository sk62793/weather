{"ast":null,"code":"import { GET_INFO_REQUEST, GET_INFO_SUCCESS, GET_INFO_FAILURE } from '../actions';\nconst initialState = {\n  isFetching: false,\n  result: []\n};\n\nconst getInfo = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_INFO_REQUEST:\n      return console.log('fetching...'), Object.assign({}, state, {\n        isFtching: true,\n        result: []\n      });\n\n    case GET_INFO_SUCCESS:\n      return console.log('Success!'), Object.assign({}, state, {\n        isFteching: false,\n        result: action.data\n      });\n\n    case GET_INFO_FAILURE:\n      return console.log('Failure!'), Object.assign({}, state, {\n        isFetching: false,\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default getInfo;","map":{"version":3,"sources":["/Users/sk62793/application-2/src/reducers/events.js"],"names":["GET_INFO_REQUEST","GET_INFO_SUCCESS","GET_INFO_FAILURE","initialState","isFetching","result","getInfo","state","action","type","console","log","Object","assign","isFtching","isFteching","data","error"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,gBAFJ,EAGIC,gBAHJ,QAIO,YAJP;AAMA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,gBAAL;AACI,aACIU,OAAO,CAACC,GAAR,CAAY,aAAZ,GACAC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AACzBO,QAAAA,SAAS,EAAE,IADc;AAEzBT,QAAAA,MAAM,EAAE;AAFiB,OAAzB,CAFJ;;AAMJ,SAAKJ,gBAAL;AACI,aACIS,OAAO,CAACC,GAAR,CAAY,UAAZ,GACAC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AACzBQ,QAAAA,UAAU,EAAE,KADa;AAEzBV,QAAAA,MAAM,EAAEG,MAAM,CAACQ;AAFU,OAAzB,CAFJ;;AAMJ,SAAKd,gBAAL;AACI,aACIQ,OAAO,CAACC,GAAR,CAAY,UAAZ,GACAC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AACzBH,QAAAA,UAAU,EAAE,KADa;AAEzBa,QAAAA,KAAK,EAAET,MAAM,CAACS;AAFW,OAAzB,CAFJ;;AAMJ;AACI,aAAOV,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,eAAeD,OAAf","sourcesContent":["import {\n    GET_INFO_REQUEST,\n    GET_INFO_SUCCESS,\n    GET_INFO_FAILURE\n} from '../actions'\n\nconst initialState = {\n    isFetching: false,\n    result: []\n}\n\nconst getInfo = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_INFO_REQUEST:\n            return (\n                console.log('fetching...'),\n                Object.assign({}, state, {\n                isFtching: true,\n                result: [],\n            }));\n        case GET_INFO_SUCCESS:\n            return (\n                console.log('Success!'),\n                Object.assign({}, state, {\n                isFteching: false,\n                result: action.data\n            }));\n        case GET_INFO_FAILURE:\n            return (\n                console.log('Failure!'),\n                Object.assign({}, state, {\n                isFetching: false,\n                error: action.error\n            }));\n        default:\n            return state\n    }\n}\n\nexport default getInfo;"]},"metadata":{},"sourceType":"module"}
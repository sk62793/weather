{"ast":null,"code":"import { GET_INFO_REQUEST, GET_INFO_SUCCESS, GET_INFO_FAILURE } from '../actions';\nconst initialState = {\n  isFetching: false,\n  data: []\n};\n\nconst getInfo = (result = initialState, action) => {\n  switch (action.type) {\n    case GET_INFO_REQUEST:\n      return console.log('fetching...'), Object.assign({}, result, {\n        isFetching: true,\n        data: []\n      });\n\n    case GET_INFO_SUCCESS:\n      return console.log('Success!'), Object.assign({}, result, {\n        isFetching: false,\n        data: action.data\n      });\n\n    case GET_INFO_FAILURE:\n      return console.log('Failure!'), Object.assign({}, result, {\n        isFetching: false,\n        error: action.error\n      });\n\n    default:\n      return result;\n  }\n};\n\nexport default getInfo;","map":{"version":3,"sources":["/Users/sk62793/application-2/src/reducers/events.js"],"names":["GET_INFO_REQUEST","GET_INFO_SUCCESS","GET_INFO_FAILURE","initialState","isFetching","data","getInfo","result","action","type","console","log","Object","assign","error"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,gBAFJ,EAGIC,gBAHJ,QAIO,YAJP;AAMA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,MAAM,GAAGJ,YAAV,EAAwBK,MAAxB,KAAmC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,gBAAL;AACI,aACIU,OAAO,CAACC,GAAR,CAAY,aAAZ,GACAC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,MAAlB,EAA0B;AAC1BH,QAAAA,UAAU,EAAE,IADc;AAE1BC,QAAAA,IAAI,EAAE;AAFoB,OAA1B,CAFJ;;AAMJ,SAAKJ,gBAAL;AACI,aACIS,OAAO,CAACC,GAAR,CAAY,UAAZ,GACAC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,MAAlB,EAA0B;AAC1BH,QAAAA,UAAU,EAAE,KADc;AAE1BC,QAAAA,IAAI,EAAEG,MAAM,CAACH;AAFa,OAA1B,CAFJ;;AAMJ,SAAKH,gBAAL;AACI,aACIQ,OAAO,CAACC,GAAR,CAAY,UAAZ,GACAC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,MAAlB,EAA0B;AAC1BH,QAAAA,UAAU,EAAE,KADc;AAE1BU,QAAAA,KAAK,EAAEN,MAAM,CAACM;AAFY,OAA1B,CAFJ;;AAMJ;AACI,aAAOP,MAAP;AAvBR;AAyBH,CA1BD;;AA4BA,eAAeD,OAAf","sourcesContent":["import {\n    GET_INFO_REQUEST,\n    GET_INFO_SUCCESS,\n    GET_INFO_FAILURE\n} from '../actions'\n\nconst initialState = {\n    isFetching: false,\n    data: []\n}\n\nconst getInfo = (result = initialState, action) => {\n    switch (action.type) {\n        case GET_INFO_REQUEST:\n            return (\n                console.log('fetching...'),\n                Object.assign({}, result, {\n                isFetching: true,\n                data: [],\n            }));\n        case GET_INFO_SUCCESS:\n            return (\n                console.log('Success!'),\n                Object.assign({}, result, {\n                isFetching: false,\n                data: action.data\n            }));\n        case GET_INFO_FAILURE:\n            return (\n                console.log('Failure!'),\n                Object.assign({}, result, {\n                isFetching: false,\n                error: action.error\n            }));\n        default:\n            return result\n    }\n}\n\nexport default getInfo;"]},"metadata":{},"sourceType":"module"}
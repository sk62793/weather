{"ast":null,"code":"var _jsxFileName = \"/Users/sk62793/application-2/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport _ from 'lodash';\nimport { getInfo } from '../actions';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  renderField(field) {\n    const {\n      input,\n      label,\n      type,\n      meta: {\n        touched,\n        error\n      },\n      ...other\n    } = field;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, input, {\n      placeholder: label,\n      type: type\n    }, other, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })), touched && error && React.createElement(\"span\", {\n      className: \"form-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, error));\n  }\n\n  async onSubmit(value) {\n    //console.log(value.city) //都市名が取得できているかの確認\n    await this.props.getInfo(value.city); //console.log(weather_info.main.humidity) //湿度\n    //console.log(weather_info.wind.speed) //風速\n  }\n\n  renderMainWeather() {\n    const weather_info = this.props.result.data;\n    return _.map(weather_info.weather, data => React.createElement(\"div\", {\n      key: data.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"\\u73FE\\u5728\\u306E\", weather_info.name, \"\\u306E\\u5929\\u6C17\\u306F\", data.main)));\n  }\n\n  renderTemp() {\n    const weather_info = this.props.result.data;\n    console.log(weather_info.main); //mainが取得できているか確認\n\n    const temp_info = _.filter(weather_info.main, {}); //console.log(temp_info[0]) //気温が取得できているか確認\n\n\n    const temp_c = temp_info[0] - 273.15; //ケルビン温度を摂氏に変換\n\n    const new_temp_c = temp_c.toFixed(2); //小数点第２位以下を四捨五入\n    //console.log(new_temp_c)\n\n    const showFrag = this.props.result.showFrag;\n    const temp_text = showFrag ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"\\u73FE\\u5728\\u306E\", weather_info.name, \"\\u306E\\u6C17\\u6E29\\u306F\", new_temp_c, \"\\u2103\") : ''; // ↑showFragのstateに応じて表示と非表示を切り替える\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, temp_text);\n  }\n\n  renderHumidity() {\n    const weather_info = this.props.result.data;\n\n    const humidity_info = _.filter(weather_info, {});\n\n    console.log(humidity_info);\n  }\n\n  renderError() {\n    const showFrag = this.props.result.showFrag;\n    const e_msg = showFrag ? '' : this.props.result.error_message; //↑showFragがfalseのときにerror_messageをe_messageに代入\n    //console.log(e_msg) //erros_messageを受け取れているかの確認\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, e_msg);\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      pristine,\n      submitting\n    } = this.props; //redux-formからpropsを受け取る\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"\\u90FD\\u5E02\\u540D\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n      name: \"city\",\n      type: \"text\",\n      component: this.renderField,\n      className: \"input-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"submit-btn\",\n      type: \"submit\",\n      value: \"Submit\",\n      disabled: pristine || submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.renderMainWeather()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.renderTemp()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.renderHumidity()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.renderError())));\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n  if (!values.city) errors.city = \"なんか打ってね\";\n  return errors;\n};\n\nconst mapStateToProps = state => ({\n  result: state.result\n});\n\nconst mapDispatchToProps = {\n  getInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  validate,\n  form: 'WeatherForm'\n})(App));","map":{"version":3,"sources":["/Users/sk62793/application-2/src/components/App.js"],"names":["React","Component","connect","Field","reduxForm","_","getInfo","App","constructor","props","onSubmit","bind","renderField","field","input","label","type","meta","touched","error","other","value","city","renderMainWeather","weather_info","result","data","map","weather","id","name","main","renderTemp","console","log","temp_info","filter","temp_c","new_temp_c","toFixed","showFrag","temp_text","renderHumidity","humidity_info","renderError","e_msg","error_message","render","handleSubmit","pristine","submitting","validate","values","errors","mapStateToProps","state","mapDispatchToProps","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport _ from 'lodash'\n\nimport { getInfo } from '../actions'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  renderField(field) {\n    const { input, label, type, meta: { touched, error }, ...other } = field\n    return (\n      <div>\n        <input {...input} placeholder={label} type={type} { ...other } />\n        {touched && error && <span className=\"form-error\">{error}</span>}\n      </div>\n    );\n  }\n\n  async onSubmit(value) {\n    //console.log(value.city) //都市名が取得できているかの確認\n    await this.props.getInfo(value.city)\n    //console.log(weather_info.main.humidity) //湿度\n    //console.log(weather_info.wind.speed) //風速\n  }\n\n  renderMainWeather() {\n    const weather_info = this.props.result.data\n      return _.map(weather_info.weather, data => (\n      <div key={data.id}>\n        <div>現在の{weather_info.name}の天気は{data.main}</div>\n      </div>\n      ))\n  }\n\n  renderTemp() {\n    const weather_info = this.props.result.data\n    console.log(weather_info.main) //mainが取得できているか確認\n    const temp_info = _.filter (weather_info.main, {});\n    //console.log(temp_info[0]) //気温が取得できているか確認\n    const temp_c = temp_info[0] -273.15 //ケルビン温度を摂氏に変換\n    const new_temp_c = temp_c.toFixed(2) //小数点第２位以下を四捨五入\n    //console.log(new_temp_c)\n    const showFrag = this.props.result.showFrag;\n    const temp_text = showFrag ? <div>現在の{weather_info.name}の気温は{new_temp_c}℃</div> : '';\n    // ↑showFragのstateに応じて表示と非表示を切り替える\n    return (<div>{temp_text}</div>)\n  }\n\n  renderHumidity() {\n    const weather_info = this.props.result.data\n    const humidity_info = _.filter (weather_info, {});\n    console.log(humidity_info);\n  }\n\n  renderError() {\n    const showFrag = this.props.result.showFrag;\n    const e_msg = showFrag ? '' : this.props.result.error_message;\n    //↑showFragがfalseのときにerror_messageをe_messageに代入\n    //console.log(e_msg) //erros_messageを受け取れているかの確認\n    return (<div>{e_msg}</div>)\n  }\n\n  render() {\n    const { handleSubmit, pristine, submitting } = this.props //redux-formからpropsを受け取る\n    return (\n      <React.Fragment>\n        <form className=\"form\" onSubmit={handleSubmit(this.onSubmit)}>\n          <div className=\"input-form\">\n            <Field\n              label=\"都市名を入力してください\"\n              name=\"city\"\n              type=\"text\"\n              component={this.renderField}className=\"input-inner\"\n            />\n            </div>\n          <div>\n            <input\n              className=\"submit-btn\"\n              type=\"submit\"\n              value=\"Submit\"\n              disabled={pristine || submitting}\n            />\n          </div>\n        </form>\n        <div className=\"container\">\n          <div>{this.renderMainWeather()}</div>\n          <div>{this.renderTemp()}</div>\n          <div>{this.renderHumidity()}</div>\n          <div>{this.renderError()}</div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst validate = values => {\n  const errors = {}\n\n  if (!values.city) errors.city = \"なんか打ってね\"\n  return errors\n}\n\nconst mapStateToProps = state => ({result: state.result })\nconst mapDispatchToProps = ({ getInfo })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  reduxForm({ validate, form: 'WeatherForm' })(App)\n)\n\n"]},"metadata":{},"sourceType":"module"}
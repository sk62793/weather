{"ast":null,"code":"var _jsxFileName = \"/Users/sk62793/application-2/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport _ from 'lodash';\nimport { getInfo } from '../actions';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  renderField(field) {\n    const {\n      input,\n      label,\n      type,\n      meta: {\n        touched,\n        error\n      }\n    } = field;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, input, {\n      placeholder: label,\n      type: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })), touched && error && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, error));\n  }\n\n  async onSubmit(value) {\n    console.log(value.city);\n    await this.props.getInfo(value.city);\n    const weather_info = this.props.result.data;\n    this.plotres(weather_info);\n    console.log(weather_info);\n    console.log(`天気は${weather_info.weather[0].main}`); //天気は？\n\n    let temp = weather_info.main.temp - 273.15; //ケルビン温度を摂氏に変換\n\n    let newTemp = temp.toFixed(2); //小数点第２位以下を四捨五入\n\n    console.log(`気温は${newTemp}℃`); //気温は？\n\n    console.log(`湿度は${weather_info.main.humidity}％`); //湿度は？\n\n    console.log(`風速は${weather_info.wind.speed}m/s`); //風速は？\n  }\n\n  renderWeather() {\n    const weather_info = this.props.result.data;\n    console.log(weather_info);\n    return _.map(weather_info.weather, data => React.createElement(\"div\", {\n      key: data.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, data.main)));\n  }\n\n  renderTemp() {\n    const weather_info = this.props.result.data;\n    console.log(weather_info);\n    console.log(weather_info.main);\n    let info = weather_info.main;\n    console.log(info['temp']);\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      pristine,\n      submitting\n    } = this.props; //redux-formからpropsを受け取る\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"\\u90FD\\u5E02\\u540D\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n      name: \"city\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      disabled: pristine || submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.renderWeather()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.renderTemp()));\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n  if (!values.city) errors.city = \"Enter a city, please.\";\n  return errors;\n};\n\nconst mapStateToProps = state => ({\n  result: state.result\n});\n\nconst mapDispatchToProps = {\n  getInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  validate,\n  form: 'eventNewForm'\n})(App));","map":{"version":3,"sources":["/Users/sk62793/application-2/src/components/App.js"],"names":["React","Component","connect","Field","reduxForm","_","getInfo","App","constructor","props","onSubmit","bind","renderField","field","input","label","type","meta","touched","error","value","console","log","city","weather_info","result","data","plotres","weather","main","temp","newTemp","toFixed","humidity","wind","speed","renderWeather","map","id","renderTemp","info","render","handleSubmit","pristine","submitting","validate","values","errors","mapStateToProps","state","mapDispatchToProps","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport _ from 'lodash'\n\nimport { getInfo } from '../actions'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  renderField(field) {\n    const { input, label, type, meta: { touched, error } } = field\n    return (\n      <div>\n        <input {...input} placeholder={label} type={type} />\n        {touched && error && <span>{error}</span>}\n      </div>\n    );\n  }\n\n  async onSubmit(value) {\n    console.log(value.city)\n    await this.props.getInfo(value.city)\n    const weather_info = this.props.result.data\n    this.plotres(weather_info);\n    console.log(weather_info)\n    console.log(`天気は${weather_info.weather[0].main}`) //天気は？\n\n    let temp = weather_info.main.temp - 273.15 //ケルビン温度を摂氏に変換\n    let newTemp = temp.toFixed(2); //小数点第２位以下を四捨五入\n    console.log(`気温は${newTemp}℃`) //気温は？\n    console.log(`湿度は${weather_info.main.humidity}％`) //湿度は？\n    console.log(`風速は${weather_info.wind.speed}m/s`)  //風速は？\n  }\n\n  renderWeather() {\n    const weather_info = this.props.result.data\n    console.log(weather_info)\n    return _.map(weather_info.weather, data => (\n      <div key={data.id}>\n        <div>{data.main}</div>\n      </div>  \n    ))\n  }\n\n  renderTemp() {\n    const weather_info = this.props.result.data\n    console.log(weather_info)\n    console.log(weather_info.main)\n    let info = weather_info.main\n    console.log(info['temp'])\n  }\n\n  render() {\n    const { handleSubmit, pristine, submitting } = this.props //redux-formからpropsを受け取る\n    return (\n      <React.Fragment>\n        <form onSubmit={handleSubmit(this.onSubmit)}>\n          <div><Field label=\"都市名を入力してください\" name=\"city\" type=\"text\" component={this.renderField} /></div>\n          <div>\n            <input type=\"submit\" value=\"Submit\" disabled={pristine || submitting} />\n          </div>\n        </form>\n        <div>{this.renderWeather()}</div>\n        <div>{this.renderTemp()}</div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst validate = values => {\n  const errors = {}\n\n  if (!values.city) errors.city = \"Enter a city, please.\"\n  return errors\n}\n\nconst mapStateToProps = state => ({ result: state.result })\nconst mapDispatchToProps = ({ getInfo })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  reduxForm({ validate, form: 'eventNewForm' })(App)\n)\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/sk62793/application-2/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport _ from 'lodash';\nimport { getInfo } from '../actions';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  renderField(field) {\n    const {\n      input,\n      label,\n      type,\n      meta: {\n        touched,\n        error\n      }\n    } = field;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, input, {\n      placeholder: label,\n      type: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })), touched && error && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, error));\n  }\n\n  async onSubmit(value) {\n    //console.log(value.city) //都市名が取得できているかの確認\n    await this.props.getInfo(value.city); //const weather_info = this.props.result.data\n    //console.log(weather_info.weather[0])\n    //console.log(`天気は${weather_info.weather[0].main}`) //天気は？\n    //let temp = weather_info.main.temp - 273.15 //ケルビン温度を摂氏に変換\n    //let newTemp = temp.toFixed(2); //小数点第２位以下を四捨五入\n    //console.log(`気温は${newTemp}℃`) //気温は？\n    //console.log(`湿度は${weather_info.main.humidity}％`) //湿度は？\n    //console.log(`風速は${weather_info.wind.speed}m/s`)  //風速は？\n  }\n\n  renderMainWeather() {\n    let weather_info = this.props.result.data; //console.log(weather_info.name) //都市名が取得できているかの確認\n\n    return _.map(weather_info.weather, data => React.createElement(\"div\", {\n      key: data.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"\\u73FE\\u5728\\u306E\", weather_info.name, \"\\u306E\\u5929\\u6C17\\u306F\", data.main)));\n  }\n\n  renderTemp() {\n    let weather_info = this.props.result.data; //console.log(weather_info.main) //mainが取得できているか確認\n\n    let temp_info = _.filter(weather_info.main, {});\n\n    let temp_c = temp_info - 273.15;\n    console.log(temp_info[0]); //気温が取得できているか確認\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"\\u73FE\\u5728\\u306E\", weather_info.name, \"\\u306E\\u6C17\\u6E29\\u306F\", temp_c, \"\\u2103\");\n  }\n\n  renderError() {\n    const e_msg = this.props.result.error_message; //console.log(e_msg)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, e_msg);\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      pristine,\n      submitting\n    } = this.props; //redux-formからpropsを受け取る\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"\\u90FD\\u5E02\\u540D\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n      name: \"city\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      disabled: pristine || submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.renderMainWeather()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.renderTemp()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.renderError()));\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n  if (!values.city) errors.city = \"都市名を入力してください\";\n  return errors;\n};\n\nconst mapStateToProps = state => ({\n  result: state.result\n});\n\nconst mapDispatchToProps = {\n  getInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  validate,\n  form: 'eventNewForm'\n})(App));","map":{"version":3,"sources":["/Users/sk62793/application-2/src/components/App.js"],"names":["React","Component","connect","Field","reduxForm","_","getInfo","App","constructor","props","onSubmit","bind","renderField","field","input","label","type","meta","touched","error","value","city","renderMainWeather","weather_info","result","data","map","weather","id","name","main","renderTemp","temp_info","filter","temp_c","console","log","renderError","e_msg","error_message","render","handleSubmit","pristine","submitting","validate","values","errors","mapStateToProps","state","mapDispatchToProps","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport _ from 'lodash'\n\nimport { getInfo } from '../actions'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  renderField(field) {\n    const { input, label, type, meta: { touched, error } } = field\n    return (\n      <div>\n        <input {...input} placeholder={label} type={type} />\n        {touched && error && <span>{error}</span>}\n      </div>\n    );\n  }\n\n  async onSubmit(value) {\n    //console.log(value.city) //都市名が取得できているかの確認\n    await this.props.getInfo(value.city)\n    //const weather_info = this.props.result.data\n    //console.log(weather_info.weather[0])\n    //console.log(`天気は${weather_info.weather[0].main}`) //天気は？\n    //let temp = weather_info.main.temp - 273.15 //ケルビン温度を摂氏に変換\n    //let newTemp = temp.toFixed(2); //小数点第２位以下を四捨五入\n    //console.log(`気温は${newTemp}℃`) //気温は？\n    //console.log(`湿度は${weather_info.main.humidity}％`) //湿度は？\n    //console.log(`風速は${weather_info.wind.speed}m/s`)  //風速は？\n  }\n\n  renderMainWeather() {\n    let weather_info = this.props.result.data\n    //console.log(weather_info.name) //都市名が取得できているかの確認\n      return _.map(weather_info.weather, data => (\n      <div key={data.id}>\n        <div>現在の{weather_info.name}の天気は{data.main}</div>\n      </div>\n      ))\n  }\n\n  renderTemp() {\n    let weather_info =this.props.result.data\n    //console.log(weather_info.main) //mainが取得できているか確認\n    let temp_info = _.filter (weather_info.main, {});\n    let temp_c = temp_info -273.15\n    console.log(temp_info[0]) //気温が取得できているか確認\n    return (\n      <div>現在の{weather_info.name}の気温は{temp_c}℃</div>\n    );\n  }\n\n  renderError() {\n    const e_msg = this.props.result.error_message\n    //console.log(e_msg)\n    return (<div>{e_msg}</div>)\n  }\n\n  render() {\n    const { handleSubmit, pristine, submitting } = this.props //redux-formからpropsを受け取る\n    return (\n      <React.Fragment>\n        <form onSubmit={handleSubmit(this.onSubmit)}>\n          <div><Field label=\"都市名を入力してください\" name=\"city\" type=\"text\" component={this.renderField} /></div>\n          <div>\n            <input type=\"submit\" value=\"Submit\" disabled={pristine || submitting} />\n          </div>\n        </form>\n        <div>{this.renderMainWeather()}</div>\n        <div>{this.renderTemp()}</div>\n        <div>{this.renderError()}</div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst validate = values => {\n  const errors = {}\n\n  if (!values.city) errors.city = \"都市名を入力してください\"\n  return errors\n}\n\nconst mapStateToProps = state => ({result: state.result })\nconst mapDispatchToProps = ({ getInfo })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  reduxForm({ validate, form: 'eventNewForm' })(App)\n)\n\n"]},"metadata":{},"sourceType":"module"}
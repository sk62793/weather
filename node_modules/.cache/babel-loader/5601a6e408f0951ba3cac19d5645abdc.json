{"ast":null,"code":"var _jsxFileName = \"/Users/sk62793/application-1/src/components/events_show.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { getEvent, deleteEvent, putEvent } from '../actions';\n\nclass EventsShow extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    if (id) this.props.getEvent(id);\n  }\n\n  renderField(field) {\n    const {\n      input,\n      label,\n      type,\n      meta: {\n        touched,\n        error\n      }\n    } = field;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, input, {\n      placeholder: label,\n      type: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })), touched && error && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, error));\n  }\n\n  async onDeleteClick() {\n    const {\n      id\n    } = this.props.match.params;\n    await this.props.deleteEvent(id);\n    this.props.history.push('/');\n  }\n\n  async onSubmit(values) {\n    //await this.props.postEvent(values)\n    this.props.history.push('/');\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      pristine,\n      submitting\n    } = this.props; //redux-formからpropsを受け取る\n\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Title\",\n      name: \"title\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Body\",\n      name: \"body\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      disabled: pristine || submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Link, {\n      to: \"/\",\n      onClick: this.onDeleteClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n  if (!values.title) errors.title = \"Enter a title, please.\";\n  if (!values.body) errors.body = \"Enter a body, please.\";\n  return errors;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const event = state.events[ownProps.match.params.id];\n  return {\n    initialValues: event,\n    event\n  };\n};\n\nconst mapDispatchToProps = {\n  deleteEvent,\n  getEvent\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  validate,\n  form: 'eventShowForm',\n  enableReinitialize: true\n})(EventsShow));","map":{"version":3,"sources":["/Users/sk62793/application-1/src/components/events_show.js"],"names":["React","Component","connect","Field","reduxForm","Link","getEvent","deleteEvent","putEvent","EventsShow","constructor","props","onSubmit","bind","onDeleteClick","componentDidMount","id","match","params","renderField","field","input","label","type","meta","touched","error","history","push","values","render","handleSubmit","pristine","submitting","validate","errors","title","body","mapStateToProps","state","ownProps","event","events","initialValues","mapDispatchToProps","form","enableReinitialize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport { Link } from 'react-router-dom';\n\nimport { getEvent, deleteEvent, putEvent } from '../actions'\n\nclass EventsShow extends Component {\n  constructor(props) {\n    super(props)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.onDeleteClick = this.onDeleteClick.bind(this)\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params\n    if (id) this.props.getEvent(id)\n  }\n\n  renderField(field) {\n    const { input, label, type, meta: { touched, error } } = field\n    return (\n      <div>\n        <input {...input} placeholder={label} type={type} />\n        {touched && error && <span>{error}</span>}\n      </div>\n    );\n  }\n\n  async onDeleteClick() {\n    const { id } = this.props.match.params\n    await this.props.deleteEvent(id)\n    this.props.history.push('/')\n  }\n\n  async onSubmit(values) {\n    //await this.props.postEvent(values)\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { handleSubmit, pristine, submitting } = this.props //redux-formからpropsを受け取る\n    return (\n      <form onSubmit={handleSubmit(this.onSubmit)}>\n        <div><Field label=\"Title\" name=\"title\" type=\"text\" component={this.renderField} /></div>\n        <div><Field label=\"Body\" name=\"body\" type=\"text\" component={this.renderField} /></div>\n        <div>\n          <input type=\"submit\" value=\"Submit\" disabled={pristine || submitting} />\n          <Link to=\"/\" >Cancel</Link>\n          <Link to=\"/\" onClick={this.onDeleteClick} >Delete</Link>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst validate = values => {\n  const errors = {}\n\n  if (!values.title) errors.title = \"Enter a title, please.\"\n  if (!values.body) errors.body = \"Enter a body, please.\"\n  return errors\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const event = state.events[ownProps.match.params.id]\n  return { initialValues: event, event }\n}\n\nconst mapDispatchToProps = ({ deleteEvent, getEvent })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  reduxForm({ validate, form: 'eventShowForm', enableReinitialize: true})(EventsShow)\n)"]},"metadata":{},"sourceType":"module"}